{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length == 0) {\n                this.filteredList = filterResult;\n            }\n            else {\n                if (this.filteredList != filterResult) {\n                    this.filteredList = filterResult;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length) {\n                this.filteredList = [];\n            }\n        }\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            (this.filteredList.length > 0)) ? this.filteredList :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]] && excludeKeys.indexOf(keys[i]) === -1) {\n                        var isDate = old[keys[i]] instanceof Date && current[keys[i]] instanceof Date;\n                        if (!isDate || (old[keys[i]].getTime() !== current[keys[i]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[cellIndex];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[cIndex];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() || this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary == true; }).length) {\n                _this.grid.refresh();\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index === 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[i][prop])) {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, index);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            stackedHeader = true;\n        }\n        if (!stackedHeader) {\n            this.setProperties({ columns: this.columnModel }, true);\n        }\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                if (record[i].parentItem != undefined) {\n                    var pindex = this.flatData[record[i].parentItem.index].index;\n                    if (this.flatData[pindex].expanded === false) {\n                        record.push(this.flatData[pindex]);\n                        this.flatData[pindex].expanded = true;\n                    }\n                }\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            row = rows[i];\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[i].style.display = 'none';\n                rightrows[i].style.display = 'none';\n                if (!rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[i];\n                    }\n                    else if (rightrows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[i];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type == \"mousemove\") ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) && !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = findChildrenRecords(records[i]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord.parentItem;\n                            draggedRecord.level = 0;\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                            draggedRecord.parentItem = droppedRecord.parentItem;\n                            draggedRecord.parentUniqueID = droppedRecord.parentUniqueID;\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                                draggedRecord.parentItem = droppedRecord.parentItem;\n                                draggedRecord.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                    }\n                    this.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[i_1]))) ?\n                                columns[i_1] : getObject('field', (columns[i_1]));\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[columnIndex])) ?\n                    columns[columnIndex] : getObject('field', columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount == this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function () {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        var uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('aria-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[i]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[i]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[i].setAttribute('aria-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                            .indexOf(currentViewRecords[0][primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action == 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) != -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) != -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary == true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    this.addRowIndex = args.index;\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[args.index];\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop] && !isNullOrUndefined(this.parent.getRowByIndex(0))) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[i]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 && index !== this[selectedRowIndex]) {\n                index = this[selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var isLastBlock = (this[selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        var containerRect = 'containerRect';\n        _super.prototype[containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n            return;\n        }*/\n            /*if(delta > 45 || delta < -45){\n          this.isWheeling = true;\n        }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            if (!isNullOrUndefined(this.expandCollapseRec) && this.parent.enableCollapseAll) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = visualData[0].index;\n                }\n                else {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            if (freeze) {\n                frozenRightRows[i].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","checkBoxRecord","checkAll","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","portals","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","renderComplete","destroyTemplateFn","clearTemplate","afterGridRender","clipboardModule","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","templateInstance","triggerEvents","bindGridEvents","rowSelecting","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","events.actionBegin","updateTreeGridModel","events.beginAdd","ag","showChildSummary","refresh","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","closeEdit","treeGridElement","hasTreeGridChild","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","selectionModule","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","freeze","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","getRecordDetails","pindex","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","primaryKeyField","getMovableRows","getFrozenRightRows","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","this_1","pageingDetails","propname","skip","size","pageSize","take","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","parentRowIndex","getRowElementByUID","totalCount","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","initialRowTop","gridTop","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","setTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","serviceLocator","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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"}