{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper-common.js","../src/circular-gauge/utils/helper-circular-gauge.js","../src/circular-gauge/utils/helper-tooltip.js","../src/circular-gauge/utils/helper-axis-panel.js","../src/circular-gauge/utils/helper-axis-renderer.js","../src/circular-gauge/utils/helper-pointer-renderer.js","../src/circular-gauge/utils/helper-legend.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/legend/legend.js","../src/circular-gauge/model/pdf-export.js","../src/circular-gauge/model/image-export.js","../src/circular-gauge/model/print.js","../src/circular-gauge/axes/gradient.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id of the text.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        // eslint-disable-next-line max-len\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText } from '../utils/helper-common';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'bootstrap5':\n            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',\n                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];\n            break;\n        case 'bootstrap5dark':\n            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',\n                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#6C757D',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#343A40',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#495057',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#E9ECEF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                labelColor: '#CED4DA',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/member-delimiter-style */\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(this.elementId + '_Secondary_Element'))) {\n            document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.gauge.renderReactTemplates();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, _this.gauge);\n                if (templateFn && templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    /**\n    * Function to measure the element rect.\n    *\n    * @param {HTMLElement} element - Specifies the html element.\n    * @returns {ClientRect} - Returns the client rect.\n    * @private\n    */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    tooltipArgs.tooltip.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                    tooltipArgs.tooltip.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        tooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, tooltipArgs.tooltip.textStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipArgs.tooltip.rangeSettings.textStyle, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        annotationTooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.clearTemplate();\n        }\n        if (isTooltipRender && (this.tooltipEle.style.left).indexOf('-') > -1) {\n            this.tooltipEle.style.left = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border\n        });\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {string} text - Specifies the text.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.isComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} textHeight - Specifies the text height.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @param {number} angle - Specifies the angle.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/dot-notation */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? startAngle + (axis.rangeGap / Math.PI) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    endAngle - (axis.rangeGap / Math.PI) : endAngle;\n        }\n        if (this.gauge.isComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        if (this.gauge.isComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                range = axis.visibleRange;\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                _this.setPointerValue(axis, pointer, pointer.currentValue);\n                pointerElement.appendChild(childElement);\n                if (animate || pointer.animation.enable) {\n                    _this.doPointerAnimation(pointer, axis);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            // eslint-disable-next-line no-constant-condition\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    var textangle = getAngleFromValue(pointer.value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n                    var textlocation = getLocationFromAngle((pointer.markerShape === 'Text') ? textangle : 0, pointer.currentRadius, _this.gauge.midPoint);\n                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                    element.setAttribute('x', String(textlocation.x));\n                    element.setAttribute('y', String(textlocation.y));\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            textElement(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer\n     * @param {number} radius - Specifies the radius\n     * @param {number} innerRadius - Specifies the innerRadius\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} radius - Specifies the radius.\n     * @param {number} innerRadius - Specifies the innerRadius.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        // eslint-disable-next-line prefer-const\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var isComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!isComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.isComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { removeElement, getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim, showTooltip } from '../utils/helper-legend';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart == rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @param {number} legendX - Specifies the legendX.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @param {boolean} redraw - Specifies the boolean value.\n     * @param {boolean} isAnimate - Specifies the boolean value.\n     * @param {string} x - Specifies the x value.\n     * @param {string} y - Specifies the y value.\n     * @param {GaugeLocation} start - Specifies the start value.\n     * @param {string} direction - Specifies the direction.\n     * @param {boolean} forceAnimate - Specifies the boolean value.\n     * @param {boolean} isRect - Specifies the rect value.\n     * @param {Rect} previousRect - Specifies the previous rect value.\n     * @param {number} animateDuration - Specifies the animate duration.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {CircularGauge} circulargauge - Specifies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = _this.control.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'TailwindDark' || _this.control.theme === 'Bootstrap5' || _this.control.theme === 'Bootstrap5Dark')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    /**\n    * To trigger the download element\n    *\n    * @param {string} fileName - Specifies the file name.\n    * @param {ExportType} type - Specifies the export type.\n    * @param {string} url - Specifies the url.\n    * @param {boolean} isDownload - Specifies the boolean value.\n    * @returns {void}\n    */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable max-len */\n/* eslint-disable brace-style */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : this.activeRange.start);\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : this.activeRange.end) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        if (!isNullOrUndefined(this.element)) {\n            if (this.element.classList.contains('e-circulargauge')) {\n                this.createSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            args.currentSize = this.availableSize;\n            this.animatePointer = false;\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            else if (this.element.classList.contains('e-circulargauge')) {\n                this.resizeTo = window.setTimeout(function () {\n                    _this.createSvg();\n                    _this.calculateBounds();\n                    _this.renderElements();\n                    args.currentSize = _this.availableSize;\n                    _this.trigger(resized, args);\n                }, 500);\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var bottom = margin.bottom + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            this.titleStyle.fontWeight = this.titleStyle.fontWeight || this.themeStyle.titleFontWeight;\n            var titleSize = this.titleStyle.size;\n            if (!isNaN(Number(titleSize))) {\n                this.titleStyle.size = titleSize + 'px';\n            }\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param content - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n            if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                secondaryElement.appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param  orientation - Specified the orientation for the exported pdf document.\n     * @param allowDownload - Specifies whether to download as a file.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame && !this.isRangeUpdate) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n        this.isRangeUpdate = false;\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null, fontWeight: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","roundedCornerRadius","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","isNaN","parseFloat","querySelectorAll","length","charAt","templateComplier","querySelector","trim","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","toString","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","gaugeMouseLeave","dragStart","dragMove","dragEnd","Annotations","elementId","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","tooltipRect","findPosition","themeStyle","tooltipFontColor","tooltipTextOpacity","svgTooltip","svgTooltipCreate","arrowInverted","tooltipFillOpacity","appendTo","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTemplate","elementSizeAn","tooltipPosition","removeTooltip","clearTemplate","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","tooltipFillColor","className","child","roundingPlaces","toFixed","addLeft","addTop","addHeight","addWidth","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","lineColor","isComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","labelColor","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","labelFontFamily","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","minorTickColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTickColor","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","theme","palette","toLowerCase","getRangePalette","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","needleColor","needleTailColor","capColor","minRadius","oldStartValue","oldEndValue","roundStartAngle","roundEndAngle","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","markerHeight","imageUrl","pointerColor","drawRangeBarPointer","gradientBarColor","previousValue","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_loop_1","this_1","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","calculateVisibleLabels","_i","_a","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","_loop_2","axisLabelRenderSuccess","this_2","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","userAgent","PdfPageOrientation","Landscape","exportElement","cloneNode","backgroundColor","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","div","forEach","Element","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","titleFontColor","titleFontWeight","fontSize","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","tooltipModule","enableRangeDrag","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","pointerInd","clientX","clientY","previousSize","currentSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","titleSize","Number","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","oldRangeStart","oldRangeEnd","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component"],"mappings":"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"}