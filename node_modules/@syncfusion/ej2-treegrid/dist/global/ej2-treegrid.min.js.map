{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length == 0) {\n                this.filteredList = filterResult;\n            }\n            else {\n                if (this.filteredList != filterResult) {\n                    this.filteredList = filterResult;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length) {\n                this.filteredList = [];\n            }\n        }\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            (this.filteredList.length > 0)) ? this.filteredList :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]] && excludeKeys.indexOf(keys[i]) === -1) {\n                        var isDate = old[keys[i]] instanceof Date && current[keys[i]] instanceof Date;\n                        if (!isDate || (old[keys[i]].getTime() !== current[keys[i]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[cellIndex];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[cIndex];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() || this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary == true; }).length) {\n                _this.grid.refresh();\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index === 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[i][prop])) {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, index);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            stackedHeader = true;\n        }\n        if (!stackedHeader) {\n            this.setProperties({ columns: this.columnModel }, true);\n        }\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                if (record[i].parentItem != undefined) {\n                    var pindex = this.flatData[record[i].parentItem.index].index;\n                    if (this.flatData[pindex].expanded === false) {\n                        record.push(this.flatData[pindex]);\n                        this.flatData[pindex].expanded = true;\n                    }\n                }\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            row = rows[i];\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[i].style.display = 'none';\n                rightrows[i].style.display = 'none';\n                if (!rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[i];\n                    }\n                    else if (rightrows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[i];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type == \"mousemove\") ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) && !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = findChildrenRecords(records[i]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord.parentItem;\n                            draggedRecord.level = 0;\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                            draggedRecord.parentItem = droppedRecord.parentItem;\n                            draggedRecord.parentUniqueID = droppedRecord.parentUniqueID;\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                                draggedRecord.parentItem = droppedRecord.parentItem;\n                                draggedRecord.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                    }\n                    this.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[i_1]))) ?\n                                columns[i_1] : getObject('field', (columns[i_1]));\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[columnIndex])) ?\n                    columns[columnIndex] : getObject('field', columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount == this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function () {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        var uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('aria-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[i]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[i]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[i].setAttribute('aria-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                            .indexOf(currentViewRecords[0][primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action == 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) != -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) != -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary == true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    this.addRowIndex = args.index;\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[args.index];\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop] && !isNullOrUndefined(this.parent.getRowByIndex(0))) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[i]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 && index !== this[selectedRowIndex]) {\n                index = this[selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var isLastBlock = (this[selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        var containerRect = 'containerRect';\n        _super.prototype[containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n            return;\n        }*/\n            /*if(delta > 45 || delta < -45){\n          this.isWheeling = true;\n        }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            if (!isNullOrUndefined(this.expandCollapseRec) && this.parent.enableCollapseAll) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = visualData[0].index;\n                }\n                else {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            if (freeze) {\n                frozenRightRows[i].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","checkBoxRecord","checkAll","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","renderComplete","destroyTemplateFn","clearTemplate","afterGridRender","clipboardModule","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","triggerEvents","bindGridEvents","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","actionBegin","actionComplete","updateTreeGridModel","ag","showChildSummary","refresh","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","closeEdit","treeGridElement","hasTreeGridChild","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","selectionModule","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","freeze","refreshScrollOffset","collapsingArgs","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","getRecordDetails","pindex","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","primaryKeyField","getMovableRows","getFrozenRightRows","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","this_1","t","res","pageingDetails","propname","skip","size","pageSize","take","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","parentRowIndex","getRowElementByUID","totalCount","selectedRecords","mRows","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","gridTop","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","setTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","serviceLocator","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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"}